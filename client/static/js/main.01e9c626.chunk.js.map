{"version":3,"sources":["p2p.js","Chat.js","Game.js","App.js","reportWebVitals.js","index.js"],"names":["RTC_CONFIG","iceServers","urls","onOpen","conn","console","log","messageHandlers","data","type","value","indx","onMessage","e","JSON","parse","addMessageHandler","handler","messageHandlersIndx","parseInt","removeMessageHandler","key","send","json","dc","stringify","encodeKey","btoa","replace","decodeKey","str","length","slice","atob","Chat","props","useState","chatMessage","setChatMessage","messages","setMessages","onSendMessage","connRef","current","message","newMessage","m","oldm","useEffect","p2p","onChange","target","onKeyUp","onClick","style","whiteSpace","Game","Create1","setOffer","setMyOffer","pc","signalingState","createDataChannel","onopen","onmessage","createOffer","then","d","setLocalDescription","catch","onicecandidate","candidate","localDescription","Create2","joinKey","setJoinKey","offer","answerDesc","RTCSessionDescription","setRemoteDescription","Join1","setAnswer","offerDesc","createAnswer","setMyAnswer","Join2","answer","Welcome","Lobby","startGame","Setup","myOffer","myAnswer","Fragment","App","inSetup","setInSetup","useRef","useCallback","method","RTCPeerConnection","ondatachannel","channel","oniceconnectionstatechange","iceConnectionState","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01e9c626.chunk.js","sourcesContent":["const RTC_CONFIG = {\n  iceServers: [\n    { urls: [\"stun:stun.l.google.com:19302\", \"stun:stun2.l.google.com:19302\"] },\n  ],\n};\n\nexport function createConn() {\n  let conn = {\n    pc: new RTCPeerConnection(RTC_CONFIG),\n    dc: null,\n    messageHandlers: {},\n    messageHandlersIndx: \"0\",\n  };\n  conn.pc.ondatachannel = (e) => {\n    conn.dc = e.channel;\n    conn.dc.onopen = () => onOpen(conn);\n    conn.dc.onmessage = (e) => onMessage(conn, e);\n  };\n  conn.pc.oniceconnectionstatechange = (e) =>\n    console.log(conn.pc.iceConnectionState);\n  return conn;\n}\n\nfunction onOpen(conn) {\n  console.log(\"opened chat!!\");\n  console.log(conn.messageHandlers);\n  const data = { type: \"info\", value: \"successfully opened connection!!\" };\n  for (const indx in conn.messageHandlers) {\n    conn.messageHandlers[indx](data);\n  }\n}\nfunction onMessage(conn, e) {\n  console.log(\"received message!\");\n  console.log(conn.messageHandlers);\n  let data = JSON.parse(e.data);\n  console.log(data);\n  for (const indx in conn.messageHandlers) {\n    conn.messageHandlers[indx](data);\n  }\n}\nexport function addMessageHandler(conn, handler) {\n  const indx = conn.messageHandlersIndx;\n  conn.messageHandlers[indx] = handler;\n  conn.messageHandlersIndx = `${parseInt(indx) + 1}`;\n  return indx;\n}\nexport function removeMessageHandler(conn, key) {\n  console.log(`removing key ${key} from conn ${conn}`);\n  delete conn.messageHandlers[key];\n}\n\nexport function sendMessage(conn, message) {\n  send(conn, { type: \"message\", message: message });\n}\nexport function sendData(conn, data) {\n  send(conn, { type: \"data\", ...data });\n}\nexport function send(conn, json) {\n  conn.dc.send(JSON.stringify(json));\n}\n\nexport function createOffer(conn, setOffer) {\n  console.log(\"create offer\");\n  console.log(conn.pc.signalingState);\n  conn.dc = conn.pc.createDataChannel(\"chat\");\n\n  conn.dc.onopen = () => onOpen(conn);\n  conn.dc.onmessage = (e) => onMessage(conn, e);\n\n  conn.pc\n    .createOffer()\n    .then((d) => conn.pc.setLocalDescription(d))\n    .catch(console.log);\n\n  conn.pc.onicecandidate = (e) => {\n    if (e.candidate) return;\n    setOffer(encodeKey(JSON.stringify(conn.pc.localDescription)));\n  };\n}\n\nfunction encodeKey(json) {\n  return btoa(json).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n}\nfunction decodeKey(key) {\n  let str = key;\n  if (str.length % 4 !== 0) {\n    str += \"===\".slice(0, 4 - (str.length % 4));\n  }\n  str = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  return atob(str);\n}\n\nexport function join(conn, joinKey, setAnswer) {\n  console.log(\"join\");\n  console.log(conn.pc.signalingState);\n  let offerDesc = new RTCSessionDescription(JSON.parse(decodeKey(joinKey)));\n\n  conn.pc\n    .setRemoteDescription(offerDesc)\n    .then(() => conn.pc.createAnswer())\n    .then((d) => conn.pc.setLocalDescription(d))\n    .catch(console.log);\n\n  conn.pc.onicecandidate = (e) => {\n    if (e.candidate) return;\n    setAnswer(encodeKey(JSON.stringify(conn.pc.localDescription)));\n  };\n}\n\nexport function acceptAnswer(conn, joinKey) {\n  console.log(\"join\");\n  console.log(conn.pc.signalingState);\n  var answerDesc = new RTCSessionDescription(JSON.parse(decodeKey(joinKey)));\n  conn.pc.setRemoteDescription(answerDesc).catch(console.log);\n}\n","import React from \"react\";\nimport { useRef, useEffect, useState } from \"react\";\nimport * as p2p from \"./p2p.js\";\n\nexport function Chat(props) {\n  const [chatMessage, setChatMessage] = useState(\"\");\n  const [messages, setMessages] = useState(\"\");\n\n  function onSendMessage() {\n    p2p.sendMessage(props.connRef.current, chatMessage);\n    newMessage(chatMessage);\n    setChatMessage(\"\");\n  }\n\n  function newMessage(m) {\n    setMessages((oldm) => {\n      if (oldm === \"\") return m;\n      return m + \"\\n\" + oldm;\n    });\n  }\n\n  useEffect(() => {\n    const indx = p2p.addMessageHandler(props.connRef.current, (m) => {\n      if (m.type === \"message\") return newMessage(m.message);\n      newMessage(JSON.stringify(m));\n    });\n    return () => {\n      console.log(`cleaning up chat!!! index ${indx}`);\n      p2p.removeMessageHandler(props.connRef.current, indx);\n    };\n  }, [props.connRef]);\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={chatMessage}\n        onChange={(e) => setChatMessage(e.target.value)}\n        onKeyUp={(e) => (e.key === \"Enter\" ? onSendMessage() : 0)}\n      ></input>\n      <button onClick={onSendMessage}>Send message</button>\n      <p style={{ whiteSpace: \"pre-line\" }}>{messages}</p>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport { useCallback, useRef, useEffect, useState } from \"react\";\nimport * as p2p from \"./p2p.js\";\n\nimport { Chat } from \"./Chat.js\";\n\nexport function Game(props) {\n  return (\n    <div>\n      welcome to the game good sir!\n      <hr />\n      <Chat connRef={props.connRef} />\n    </div>\n  );\n}\n","import \"./App.css\";\nimport React from \"react\";\nimport { useCallback, useRef, useEffect, useState } from \"react\";\nimport * as p2p from \"./p2p.js\";\n\nimport { Game } from \"./Game.js\";\nimport { Chat } from \"./Chat.js\";\n\nfunction Create1(props) {\n  return (\n    <div>\n      <button\n        onClick={() => p2p.createOffer(props.connRef.current, props.setMyOffer)}\n      >\n        Create game\n      </button>\n    </div>\n  );\n}\n\nfunction Create2(props) {\n  const [joinKey, setJoinKey] = useState(\"\");\n  return (\n    <div>\n      send this message to your friends: <code>{props.offer}</code>\n      <br />\n      input their answer:\n      <input\n        type=\"text\"\n        value={joinKey}\n        onChange={(e) => setJoinKey(e.target.value)}\n      ></input>\n      <button onClick={() => p2p.acceptAnswer(props.connRef.current, joinKey)}>\n        Add player\n      </button>\n    </div>\n  );\n}\n\nfunction Join1(props) {\n  const [joinKey, setJoinKey] = useState(\"\");\n  return (\n    <div>\n      <input\n        type=\"text\"\n        value={joinKey}\n        onChange={(e) => setJoinKey(e.target.value)}\n      ></input>\n      <button\n        onClick={() =>\n          p2p.join(props.connRef.current, joinKey, props.setMyAnswer)\n        }\n      >\n        Join\n      </button>\n    </div>\n  );\n}\n\nfunction Join2(props) {\n  return (\n    <div>\n      send this message to your friends: <code>{props.answer}</code>\n      <br />\n    </div>\n  );\n}\n\nfunction Welcome(props) {\n  console.log(props.connRef);\n  return (\n    <div>\n      <Create1 connRef={props.connRef} setMyOffer={props.setMyOffer} />\n      <br />\n      <Join1 connRef={props.connRef} setMyAnswer={props.setMyAnswer} />\n      <br />\n    </div>\n  );\n}\n\nfunction Lobby(props) {\n  return (\n    <div>\n      {props.offer ? (\n        <Create2 connRef={props.connRef} offer={props.offer} />\n      ) : (\n        <Join2 connRef={props.connRef} answer={props.answer} />\n      )}\n      <hr />\n      Participants list: idk\n      <br />\n      <hr />\n      <button onClick={props.startGame}>Start game!</button>\n      <hr />\n      <Chat connRef={props.connRef} />\n    </div>\n  );\n}\n\nfunction Setup(props) {\n  const [myOffer, setMyOffer] = useState(null);\n  const [myAnswer, setMyAnswer] = useState(null);\n\n  if (myOffer || myAnswer) {\n    return (\n      <Lobby\n        connRef={props.connRef}\n        offer={myOffer}\n        answer={myAnswer}\n        startGame={props.startGame}\n      />\n    );\n  } else {\n    return (\n      <React.Fragment>\n        <Welcome\n          connRef={props.connRef}\n          setMyOffer={setMyOffer}\n          setMyAnswer={setMyAnswer}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nfunction App() {\n  const [inSetup, setInSetup] = useState(true);\n  const connRef = useRef();\n\n  const startGame = useCallback(() => {\n    setInSetup(false);\n    p2p.sendData(connRef.current, { method: \"START\" });\n  }, [connRef]);\n\n  useEffect(() => {\n    connRef.current = p2p.createConn();\n  }, []);\n\n  useEffect(() => {\n    const indx = p2p.addMessageHandler(connRef.current, (m) => {\n      if (m.type === \"data\" && m.method === \"START\") setInSetup(false);\n    });\n    return () => {\n      p2p.removeMessageHandler(connRef.current, indx);\n    };\n  }, [connRef]);\n\n  return (\n    <div className=\"App\">\n      {inSetup && <Setup connRef={connRef} startGame={startGame} />}\n      {!inSetup && <Game connRef={connRef} />}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}